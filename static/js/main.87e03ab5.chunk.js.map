{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","result","setResult","className","map","button","index","value","onClick","evaluate","addHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA0CeA,EAtCH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAqBA,OACE,sBAAKC,UAAU,YAAf,UACE,4CACA,sBAAKA,UAAU,UAAf,UACA,6BAAKF,GAAU,MADf,IAEEF,GAAS,IAFX,OArBY,CACd,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAqBNK,KAAK,SAACC,EAAQC,GACrB,OACA,wBAAoBC,MAAOF,EAAQG,QAAS,kBApB7B,SAACH,GACtBL,EAASD,EAAQM,GACF,MAAXA,GACFH,EAAUO,YAASV,IACrBC,EAASD,IACa,MAAXM,IACTL,EAAS,IACTE,EAAU,KAa0CQ,CAAWL,IAA3D,SAAsEA,GAAzDC,UCxBJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87e03ab5.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { evaluate } from 'mathjs'\nimport \"../src/index.css\"\n\nconst App = ()=>{\n  const [input, setInput] = useState(\"\")\n  const [result, setResult] = useState(\"\")\n\n\n  const buttons = [\n    \"7\", \"8\", \"9\", \"C\",\n    \"4\", \"5\", \"6\", \"/\",\n    \"1\", \"2\", \"3\", \"-\",\n    \"0\", \"+\", \"*\", \"=\"\n  ]\n\n  const addHandler = (button) =>{\nsetInput(input + button);\nif (button === \"=\") {\n  setResult(evaluate(input));\nsetInput(input)\n} else if (button === \"C\") {\n  setInput(\"\")\n  setResult(\"\")\n}\n}\n\n  return (\n    <div className=\"container\">\n      <h1>Calculator</h1>\n      <div className=\"display\">\n      <h2>{result || \"0\"}</h2>\n      ({input || \"0\"})\n      </div>\n    {buttons.map ((button, index)=>{\n      return (\n      <button key={index} value={button} onClick={()=>addHandler(button)} >{button}</button>\n    )}) }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}